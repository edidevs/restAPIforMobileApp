{"version":3,"sources":["../../src/controller/foodtruck.js"],"names":["config","db","api","get","req","res","send","post","newFoodTruck","FoodTruck","name","body","foodtype","avgcost","geometry","coordinates","console","log","save","err","json","message","find","foodtrucks","findById","params","id","foodtruck","put","delete","remove","_id","newReview","Review","title","text","ftruck","review","reviews","push"],"mappings":"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","file":"foodtruck.js","sourcesContent":["import mongoose from 'mongoose'; \n\nimport { Router } from 'express'; \n\nimport FoodTruck from '../model/foodtruck'; \nimport Review from '../model/review'; \n\nexport default function ({config, db}) {\n\n    let api = Router(); \n\n    //CRUD - CREATE Read, Update, and Delete \n    // '/v1/restaurant/add' - Create \n    \n    api.get('/read', (req, res) => {\n\n        res.send(\"hello read\");\n    });\n\n    api.post('/add', (req, res) => {\n        let newFoodTruck = new FoodTruck(); \n        newFoodTruck.name = req.body.name; \n        newFoodTruck.foodtype = req.body.foodtype;\n        newFoodTruck.avgcost = req.body.avgcost;\n        newFoodTruck.geometry.coordinates = req.body.geometry.coordinates; \n        console.log(\"Post\"); \n        newFoodTruck.save(err => {\n            if(err){\n                console.log(\"Error saving \" + err)\n            }\n            res.json({message: \"Restaurant saved successfully\"}); \n            console.log(\"saved successfly post\");\n        });\n\n\n\n       \n    }); \n    // '/v1/restaurant/add' - Read \n    api.get('/', (req,res) => {\n        FoodTruck.find({}, (err, foodtrucks) => {\n\n            if(err){\n                res.send(err);\n            }\n\n            res.json(foodtrucks);\n        });\n\n    });\n\n     // '/v1/restaurant/:id' - Read 1\n     api.get('/:id', (req, res) => {\n        FoodTruck.findById(req.params.id, (err, foodtruck) => {\n            if(err){\n                res.send(err);\n            }\n\n            res.json(foodtruck); \n\n        });\n     });  \n\n     // '/v1/restaurant/:id' - update\n     api.put('/:id', (req, res) => {\n        FoodTruck.findById(req.params.id, (err, foodtruck) => {\n            if(err){\n                res.send(err); \n            }; \n            foodtruck.name = req.body.name; \n            foodtruck.save( err => {\n                if(err){\n                    res.send(err);\n                }\n                res.json({message: \"Foodtruck info updated\"});\n            }); \n        });\n     }); \n\n     // '/v1/restaurant/:id' - delete \n\n     api.delete('/:id', (req, res) => {\n\n        FoodTruck.remove({\n            _id : req.params.id\n        }, (err, foodtruck) => {\n            if(err){\n                res.send(err); \n            }\n\n            res.json({message:\"Foodtruck succesfully removed\"}); \n        });\n     });\n\n     // Add review for a specific foodtruck id \n     // '/v1/foodtruck/reviews/add:id'\n\n     api.post('/reviews/add/:id', (req, res) => {\n        FoodTruck.findById(req.params.id, (err, foodtruck) => {\n            if(err){\n                res.send(err);\n            }\n\n            let newReview = new Review();\n\n            newReview.title = req.body.title; \n            newReview.text = req.body.text; \n            newReview.foodtruck = foodtruck._id; \n\n            let ftruck = foodtruck; \n\n            newReview.save((err, review) => {\n                if(err){\n                    res.send(\"Error saving review \" + err); \n                }\n                ftruck.reviews.push(newReview);\n                ftruck.save(err => {\n                    if(err){\n                        res.send(err);\n                    }\n                    res.json({message: 'Food truck review saved'});\n                });\n\n                \n\n            });\n        });\n     });\n\n     // Get review for a specific foodtruck id \n     // '/v1/foodtruck/reviews/:id'\n     api.get('/reviews/:id', (req, res) => {\n\n        Review.find({foodtruck: req.params.id}, (err, reviews) => {\n            if(err){\n                res.send(err);\n            }\n\n            res.json(reviews); \n        }); \n     });\n\n\n    return api; \n}; "]}